<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
        <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
        <IsPackable>false</IsPackable>
        <SpaRoot>ClientApp\</SpaRoot>
        <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>

        <!-- Set this to true if you enable server-side prerendering -->
        <BuildServerSideRenderer>false</BuildServerSideRenderer>
        <TargetFramework>net5.0</TargetFramework>
        <UserSecretsId>6d05613e-c2b9-411c-91b3-ff0507575f7c</UserSecretsId>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="FluentValidation" Version="10.3.3" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="10.3.3" />
        <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.4" />
        <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="4.5.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <!-- Don't publish the SPA source files, but do show them in the project files list -->
        <Content Remove="$(SpaRoot)**" />
        <Content Include="ClientApp\src\assets\loading.gif">
          <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        </Content>
        <None Remove="$(SpaRoot)**" />
        <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
        <None Remove="ClientApp\src\app\game\**" />
        <Content Remove="ClientApp\src\app\game\**" />
        <None Remove="ClientApp\src\app\import\**" />
        <Content Remove="ClientApp\src\app\import\**" />
    </ItemGroup>

    <ItemGroup>
      <None Remove="ClientApp\src\app\game\startGameRedirect.component.ts" />
    </ItemGroup>

    <ItemGroup>
      <ProjectReference Include="..\MedExpert.Core\MedExpert.Core.csproj" />
      <ProjectReference Include="..\MedExpert.Excel\MedExpert.Excel.csproj" />
      <ProjectReference Include="..\MedExpert.Services\MedExpert.Services.csproj" />
    </ItemGroup>

    <ItemGroup>
      <TypeScriptCompile Remove="ClientApp\src\app\game\updateRecordDialog.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\records\records.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\game\tutorial.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\components\game\game.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\components\game\startGame.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\components\game\startGameDialog.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\components\game\startGameRedirect.component.ts" />
      <TypeScriptCompile Remove="ClientApp\src\app\services\passGameParametersService.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\store\model\analyses-result.model.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\store\model\comment.model.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\store\model\computed-indicator.model.ts" />
      <None Include="ClientApp\src\app\store\model\medical-state.modelts" />
      <TypeScriptCompile Include="ClientApp\src\app\store\model\filter-button.model.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\store\model\profile.model.ts" />
      <TypeScriptCompile Include="ClientApp\src\app\store\model\tree-item.ts" />
    </ItemGroup>

    <ItemGroup>
      <Folder Include="ClientApp\dist" />
      <Folder Include="Filters" />
    </ItemGroup>

    <ItemGroup>
      <Compile Remove="ClientApp\src\app\game\**" />
      <Compile Remove="ClientApp\src\app\import\**" />
    </ItemGroup>

    <ItemGroup>
      <EmbeddedResource Remove="ClientApp\src\app\game\**" />
      <EmbeddedResource Remove="ClientApp\src\app\import\**" />
    </ItemGroup>

    <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
        <!-- Ensure Node.js is installed -->
        <Exec Command="node --version" ContinueOnError="true">
            <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
        </Exec>
        <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
        <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
        <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build --prod --aot --outputHashing=all" />
        <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod --aot --outputHashing=all" Condition=" '$(BuildServerSideRenderer)' == 'true' " />

        <!-- Include the newly-built files in the publish output -->
        <ItemGroup>
            <DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
            <DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
            <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
                <RelativePath>%(DistFiles.Identity)</RelativePath>
                <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
                <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
            </ResolvedFileToPublish>
        </ItemGroup>
    </Target>

</Project>
